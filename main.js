(()=>{"use strict";var n={466:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(537),r=t.n(o),i=t(645),A=t.n(i),a=t(837),s=t(538),c=A()(r());c.i(a.Z),c.i(s.Z),c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Cairo:wght@400;700&display=swap);"]),c.push([n.id,':root.dark{--color-base-bg: rgb(18, 18, 18);--color-base-text: rgb(240, 240, 240)}:root.light{--color-base-bg: rgb(240, 240, 240);--color-base-text: rgb(18, 18, 18)}*,*::after,*::before{box-sizing:border-box}.visually-hidden{clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.hide{display:none}body{font-family:"Cairo",sans-serif}h1{font-size:3.5rem;font-weight:bold}header{background-color:#334155;color:#eee;padding:20px}main{min-height:calc(100vh - 96px - 72px);padding:20px;color:#333}footer{background-color:#334155;font-size:2rem;display:flex;justify-content:center;align-items:center}footer p{display:inline-block;color:#eee}footer i{color:#eee;transition:all .2s ease;padding:20px}footer i:hover{transform:rotate(360deg) scale(1.1)}#instructions{text-align:center;margin-bottom:20px}#instructions h2{font-size:2rem;margin-bottom:10px}#instructions label{font-size:1.3rem}#grids-container{display:flex;justify-content:space-around;align-items:center}#grids-container #player-grid .cell.ship{background-color:#41ca71}#grids-container #player-grid .cell.ship.attacked{background-color:#e11d48}#grids-container #ai-grid .cell:not(.ship.attacked):not(.attacked):hover{background-color:#eee}#grids-container .row{display:flex}#grids-container .cell{width:min(54px,4vw);height:min(54px,4vw);box-shadow:0px 0px 5px 1px rgba(51,51,51,.5);border-radius:5px;margin:2px;background-color:#334155;transition:background-color 100ms ease-in-out}#grids-container .cell.ship.attacked{background-color:#e11d48}#grids-container .cell.attacked{background-color:#64748b}#grids-container p{font-style:italic;text-align:center;margin-top:10px;font-size:1.1rem}dialog{opacity:0;transform:scaleY(0);background-color:#334155;border:none;border-radius:10px;color:#eee;font-size:2.3rem;box-shadow:5px 5px 5px 2px rgba(51,51,51,.8);display:flex;flex-direction:column;align-items:center;transition:opacity 300ms ease-in-out,transform 300ms ease-in-out}dialog[open]{opacity:1;transform:scaleY(1)}dialog p{margin-bottom:40px;font-weight:bold}dialog button{font-size:2rem;padding:20px;border:none;border-radius:5px;cursor:pointer;background-color:#eee;opacity:.7;transition:opacity 200ms ease-in-out}dialog button:hover{opacity:1}',"",{version:3,sources:["webpack://./src/css/styles.scss"],names:[],mappings:"AAWA,WACE,gCAAA,CACA,qCAAA,CAEF,YACE,mCAAA,CACA,kCAAA,CAGF,qBAGE,qBAAA,CAQF,iBACE,kBAAA,CACA,oBAAA,CACA,UAAA,CACA,eAAA,CACA,iBAAA,CACA,kBAAA,CACA,SAAA,CAEF,MACE,YAAA,CAGF,KACE,8BAAA,CAEF,GACE,gBAAA,CACA,gBAAA,CAGF,OACE,wBAhDgB,CAiDhB,UAnDM,CAoDN,YAAA,CAEF,KACE,oCAAA,CACA,YAAA,CACA,UAxDK,CA0DP,OACE,wBA1DgB,CA2DhB,cAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,SACE,oBAAA,CACA,UApEI,CAuEN,SACE,UAxEI,CAyEJ,uBA/CS,CAgDT,YAAA,CAEA,eACE,mCAAA,CAKN,cACE,iBAAA,CACA,kBAAA,CAEA,iBACE,cAAA,CACA,kBAAA,CAEF,oBACE,gBAAA,CAIJ,iBACE,YAAA,CACA,4BAAA,CACA,kBAAA,CAGE,yCACE,wBAnGO,CAoGP,kDACE,wBAnGQ,CAyGZ,yEACE,qBAzGQ,CA6GZ,sBACE,YAAA,CAEF,uBACE,mBAAA,CACA,oBAAA,CACA,4CAAA,CACA,iBAAA,CACA,UAAA,CACA,wBA1Hc,CA2Hd,6CAAA,CAGE,qCACE,wBA5HQ,CAgIZ,gCACE,wBAlIS,CAsIb,mBACE,iBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAIJ,OAKE,SAAA,CACA,mBAAA,CACA,wBAvJgB,CAwJhB,WAAA,CACA,kBAAA,CACA,UA5JM,CA6JN,gBAAA,CACA,4CAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,gEACE,CAhBF,aACE,SAAA,CACA,mBAAA,CAiBF,SACE,kBAAA,CACA,gBAAA,CAEF,cACE,cAAA,CACA,YAAA,CACA,WAAA,CACA,iBAAA,CACA,cAAA,CACA,qBAhLI,CAiLJ,UAAA,CACA,oCAAA,CAEA,oBACE,SAAA",sourcesContent:["@import 'normalize.css', 'reset.css';\n@import url('https://fonts.googleapis.com/css2?family=Cairo:wght@400;700&display=swap');\n\n$white: #eee;\n$dark: #333;\n$grid-background: #334155;\n$ship-color: #41ca71;\n$missed-color: #64748b;\n$touched-color: #e11d48;\n$hover-color: #eee;\n\n:root.dark {\n  --color-base-bg: rgb(18, 18, 18);\n  --color-base-text: rgb(240, 240, 240);\n}\n:root.light {\n  --color-base-bg: rgb(240, 240, 240);\n  --color-base-text: rgb(18, 18, 18);\n}\n\n*,\n*::after,\n*::before {\n  box-sizing: border-box;\n}\n\n$header-size: 96px;\n$footer-size: 72px;\n$shadow: 2px 2px 2px 0 rgba(51, 51, 51, 0.6);\n$transition: all 0.2s ease;\n\n.visually-hidden {\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n.hide {\n  display: none;\n}\n\nbody {\n  font-family: 'Cairo', sans-serif;\n}\nh1 {\n  font-size: 3.5rem;\n  font-weight: bold;\n}\n\nheader {\n  background-color: $grid-background;\n  color: $white;\n  padding: 20px;\n}\nmain {\n  min-height: calc(100vh - $header-size - $footer-size);\n  padding: 20px;\n  color: $dark;\n}\nfooter {\n  background-color: $grid-background;\n  font-size: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  p {\n    display: inline-block;\n    color: $white;\n  }\n\n  i {\n    color: $white;\n    transition: $transition;\n    padding: 20px;\n\n    &:hover {\n      transform: rotate(360deg) scale(1.1);\n    }\n  }\n}\n\n#instructions {\n  text-align: center;\n  margin-bottom: 20px;\n\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 10px;\n  }\n  label {\n    font-size: 1.3rem;\n  }\n}\n\n#grids-container {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n\n  #player-grid {\n    .cell.ship {\n      background-color: $ship-color;\n      &.attacked {\n        background-color: $touched-color;\n      }\n    }\n  }\n\n  #ai-grid {\n    .cell:not(.ship.attacked):not(.attacked):hover {\n      background-color: $hover-color;\n    }\n  }\n\n  .row {\n    display: flex;\n  }\n  .cell {\n    width: min(54px, 4vw);\n    height: min(54px, 4vw);\n    box-shadow: 0px 0px 5px 1px rgba(51, 51, 51, 0.5);\n    border-radius: 5px;\n    margin: 2px;\n    background-color: $grid-background;\n    transition: background-color 100ms ease-in-out;\n\n    &.ship {\n      &.attacked {\n        background-color: $touched-color;\n      }\n    }\n\n    &.attacked {\n      background-color: $missed-color;\n    }\n  }\n\n  p {\n    font-style: italic;\n    text-align: center;\n    margin-top: 10px;\n    font-size: 1.1rem;\n  }\n}\n\ndialog {\n  &[open] {\n    opacity: 1;\n    transform: scaleY(1);\n  }\n  opacity: 0;\n  transform: scaleY(0);\n  background-color: $grid-background;\n  border: none;\n  border-radius: 10px;\n  color: $white;\n  font-size: 2.3rem;\n  box-shadow: 5px 5px 5px 2px rgba(51, 51, 51, 0.8);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transition:\n    opacity 300ms ease-in-out,\n    transform 300ms ease-in-out;\n\n  p {\n    margin-bottom: 40px;\n    font-weight: bold;\n  }\n  button {\n    font-size: 2rem;\n    padding: 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    background-color: $white;\n    opacity: 0.7;\n    transition: opacity 200ms ease-in-out;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n}\n"],sourceRoot:""}]);const l=c},837:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),A=t.n(i)()(r());A.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n html {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n\n',"",{version:3,sources:["webpack://./src/css/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;CAED;EACC,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n html {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n\n'],sourceRoot:""}]);const a=A},538:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),A=t.n(i)()(r());A.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n","",{version:3,sources:["webpack://./src/css/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n"],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&A[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},A=[],a=0;a<n.length;a++){var s=n[a],c=o.base?s[0]+o.base:s[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var p=t(d),E={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(E);else{var h=r(E,o);o.byIndex=a,e.splice(a,0,{identifier:d,updater:h,references:1})}A.push(d)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var s=o(n,r),c=0;c<i.length;c++){var l=t(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),A=t.n(i),a=t(565),s=t.n(a),c=t(216),l=t.n(c),d=t(589),p=t.n(d),E=t(466),h={};function u(){const n=10,e=[];for(let t=0;t<n;t+=1){const t=[];for(let e=0;e<n;e+=1)t.push({alreadyAttacked:!1,ship:null});e.push(t)}const t=[],o=[5,4,3,3,2];let r=0;const i=e=>!(e[0]<0||e[0]>=n||e[1]<0||e[1]>=n),A=(e,t,o=!0)=>{if(o){if(t[0]+e-1>=n)return!1}else if(t[1]+e-1>=n)return!1;return!0},a=(n,t,o=!0)=>{if(o){for(let o=0;o<n;o+=1)if(null!==e[t[0]+o][t[1]].ship)return!0}else for(let o=0;o<n;o+=1)if(null!==e[t[0]][t[1]+o].ship)return!0;return!1},s=(n,e,t=!0)=>!!i(e)&&!!A(n,e,t)&&!a(n,e,t),c=(n,o,i=!0)=>{if(!s(n,o,i))return!1;const A=function(n){const e=n;let t=0;return{length:e,hit:()=>{t+=1},isSunk:()=>t>=e}}(n);if(t.push(A),i)for(let t=0;t<n;t+=1)e[o[0]+t][o[1]].ship=A;else for(let t=0;t<n;t+=1)e[o[0]][o[1]+t].ship=A;return r+=1,!0};return{placeShip:c,receiveAttack:n=>!!(n=>!!i(n)&&!e[n[0]][n[1]].alreadyAttacked)(n)&&(null!==e[n[0]][n[1]].ship&&e[n[0]][n[1]].ship.hit(),e[n[0]][n[1]].alreadyAttacked=!0,!0),isAllShipsSunk:()=>void 0===t.find((n=>!n.isSunk())),getAttackPositions:()=>{const n=[];for(let t=0;t<e.length;t+=1)for(let o=0;o<e[t].length;o+=1)e[t][o].alreadyAttacked||n.push([t,o]);return n},getCellState:n=>{if(!i(n))throw new RangeError("This position is outside the game board");return e[n[0]][n[1]]},placeShipsRandomly:()=>{let e,t,r;o.forEach((o=>{do{e=Math.random()>.5,e?(t=Math.floor(Math.random()*(n-o+1)),r=Math.floor(Math.random()*n)):(t=Math.floor(Math.random()*n),r=Math.floor(Math.random()*(n-o+1)))}while(!c(o,[t,r],e))}))},previewNextShipPlacement:()=>t.length<o.length?o[r]:null,isShipPlacable:s,isAllShipsPlaced:()=>5===t.length,isPositionOccupied:a,isPositionAndLengthValid:A,size:n}}h.styleTagTransform=p(),h.setAttributes=s(),h.insert=A().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=l(),e()(E.Z,h),E.Z&&E.Z.locals&&E.Z.locals;const m=(()=>{const n={board:u()},e=(()=>{const e=u();return e.placeShipsRandomly(),{board:e,playRandomAttack:e=>{const t=n.board.getAttackPositions(),o=Math.floor(Math.random()*t.length);e.receiveAttack(t[o])}}})(),t=()=>n.board.isAllShipsSunk()||e.board.isAllShipsSunk();return{player:n,ai:e,playAttack:o=>{e.board.receiveAttack(o)&&!t()&&e.playRandomAttack(n.board)},resetGame:()=>{n.board=u(),e.board=u(),e.board.placeShipsRandomly()},isGameOver:t,getWinner:()=>n.board.isAllShipsSunk()?"ai":"player",isAllShipsPlaced:()=>n.board.isAllShipsPlaced()&&e.board.isAllShipsPlaced()}})(),C=10,b=document.querySelector("dialog"),f=document.getElementById("game-result"),g=document.querySelector("dialog button"),y=document.getElementById("horizontal"),v=document.querySelector("#instructions label"),x=document.querySelector("#instructions h2");function B(n,e){return document.querySelectorAll(`#${n} .row`)[e[1]].childNodes[e[0]]}function k(n,e,t){const o=t.getCellState([e[0],e[1]]),r=B(n,[e[0],e[1]]);o.alreadyAttacked?r.classList.add("attacked"):r.classList.remove("attacked"),o.ship?r.classList.add("ship"):r.classList.remove("ship")}function w(n,e){for(let t=0;t<C;t+=1)for(let o=0;o<C;o+=1)k(n,[t,o],e)}function z(n){const e=m.player.board.previewNextShipPlacement();if(null!==e){let t=n;m.player.board.isPositionAndLengthValid(e,n,y.checked)||(t=y.checked?[m.player.board.size-e,n[1]]:[n[0],m.player.board.size-e]),m.player.board.isPositionOccupied(e,t,y.checked)||m.player.board.placeShip(e,t,y.checked),m.isAllShipsPlaced()&&(x.textContent="Good luck captain",y.classList.add("hide"),v.classList.add("hide"))}}function S(n){const e=m.player.board.previewNextShipPlacement();if(null!==e)if(w("player-grid",m.player.board),y.checked){let t;m.player.board.isPositionAndLengthValid(e,n)?[t]=n:t=m.player.board.size-e;for(let o=0;o<e;o+=1)B("player-grid",[t+o,n[1]]).classList.add("ship")}else{let t;m.player.board.isPositionAndLengthValid(e,n,!1)?[,t]=n:t=m.player.board.size-e;for(let o=0;o<e;o+=1)B("player-grid",[n[0],t+o]).classList.add("ship")}}function M(n){let e,t;for(let o=C-1;o>=0;o-=1){t=document.createElement("div"),t.className="row";for(let r=0;r<C;r+=1)e=document.createElement("div"),e.className="cell",e.setAttribute("data-pos",[o,r]),"ai-grid"===n.id?e.addEventListener("click",(()=>{return n=[r,o],void(m.isAllShipsPlaced()&&(m.playAttack(n),k("ai-grid",n,m.ai.board),w("player-grid",m.player.board),m.isGameOver()&&(f.textContent=`${m.getWinner().toUpperCase()} wins the game!`,b.showModal())));var n})):(e.addEventListener("click",(()=>z([r,o]))),e.addEventListener("mouseover",(()=>S([r,o])))),t.appendChild(e);n.prepend(t)}}g.addEventListener("click",(()=>{b.close(),m.resetGame(),w("player-grid",m.player.board),w("ai-grid",m.ai.board),y.classList.remove("hide"),v.classList.remove("hide"),x.textContent="Place your ships"}));const F=document.getElementById("player-grid"),I=document.getElementById("ai-grid");M(F),M(I),w("ai-grid",m.ai.board)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QkFBaUIsU0FBUyxLQUN2QzdCLEVBQU9rQyxRQUNQOUMsRUFBS1MsWUFDTG9CLEVBQVcsY0FBZTdCLEVBQUtDLE9BQU8xQyxPQUN0Q3NFLEVBQVcsVUFBVzdCLEVBQUtFLEdBQUczQyxPQUM5QnlELEVBQWlCVyxVQUFVbkksT0FBTyxRQUNsQ3lILEVBQWdCVSxVQUFVbkksT0FBTyxRQUNqQzBILEVBQWlCYyxZQUFjLGtCQUFrQixJQ3ZNbkQsTUFBTWUsRUFBc0IzSSxTQUFTMEcsZUFBZSxlQUM5Q2tDLEVBQWtCNUksU0FBUzBHLGVBQWUsV0FFaERzQixFQUFXVyxHQUNYWCxFQUFXWSxHQUNYbkIsRUFBVyxVQUFXN0IsRUFBS0UsR0FBRzNDLE0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZWZhdWx0Ly4vc3JjL2Nzcy9zdHlsZXMuc2NzcyIsIndlYnBhY2s6Ly9kZWZhdWx0Ly4vc3JjL2Nzcy9ub3JtYWxpemUuY3NzIiwid2VicGFjazovL2RlZmF1bHQvLi9zcmMvY3NzL3Jlc2V0LmNzcyIsIndlYnBhY2s6Ly9kZWZhdWx0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9kZWZhdWx0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9kZWZhdWx0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9kZWZhdWx0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2RlZmF1bHQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2RlZmF1bHQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9kZWZhdWx0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2RlZmF1bHQvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vZGVmYXVsdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2RlZmF1bHQvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2RlZmF1bHQvLi9zcmMvY3NzL3N0eWxlcy5zY3NzPzdiMmYiLCJ3ZWJwYWNrOi8vZGVmYXVsdC8uL3NyYy9qcy9nYW1lQm9hcmQuanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC8uL3NyYy9qcy9zaGlwLmpzIiwid2VicGFjazovL2RlZmF1bHQvLi9zcmMvanMvZ2FtZS5qcyIsIndlYnBhY2s6Ly9kZWZhdWx0Ly4vc3JjL2pzL0RPTUhhbmRsZXIuanMiLCJ3ZWJwYWNrOi8vZGVmYXVsdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9ub3JtYWxpemUuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8xX19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcmVzZXQuY3NzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMV9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1DYWlybzp3Z2h0QDQwMDs3MDAmZGlzcGxheT1zd2FwKTtcIl0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGA6cm9vdC5kYXJrey0tY29sb3ItYmFzZS1iZzogcmdiKDE4LCAxOCwgMTgpOy0tY29sb3ItYmFzZS10ZXh0OiByZ2IoMjQwLCAyNDAsIDI0MCl9OnJvb3QubGlnaHR7LS1jb2xvci1iYXNlLWJnOiByZ2IoMjQwLCAyNDAsIDI0MCk7LS1jb2xvci1iYXNlLXRleHQ6IHJnYigxOCwgMTgsIDE4KX0qLCo6OmFmdGVyLCo6OmJlZm9yZXtib3gtc2l6aW5nOmJvcmRlci1ib3h9LnZpc3VhbGx5LWhpZGRlbntjbGlwOnJlY3QoMCAwIDAgMCk7Y2xpcC1wYXRoOmluc2V0KDUwJSk7aGVpZ2h0OjFweDtvdmVyZmxvdzpoaWRkZW47cG9zaXRpb246YWJzb2x1dGU7d2hpdGUtc3BhY2U6bm93cmFwO3dpZHRoOjFweH0uaGlkZXtkaXNwbGF5Om5vbmV9Ym9keXtmb250LWZhbWlseTpcIkNhaXJvXCIsc2Fucy1zZXJpZn1oMXtmb250LXNpemU6My41cmVtO2ZvbnQtd2VpZ2h0OmJvbGR9aGVhZGVye2JhY2tncm91bmQtY29sb3I6IzMzNDE1NTtjb2xvcjojZWVlO3BhZGRpbmc6MjBweH1tYWlue21pbi1oZWlnaHQ6Y2FsYygxMDB2aCAtIDk2cHggLSA3MnB4KTtwYWRkaW5nOjIwcHg7Y29sb3I6IzMzM31mb290ZXJ7YmFja2dyb3VuZC1jb2xvcjojMzM0MTU1O2ZvbnQtc2l6ZToycmVtO2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn1mb290ZXIgcHtkaXNwbGF5OmlubGluZS1ibG9jaztjb2xvcjojZWVlfWZvb3RlciBpe2NvbG9yOiNlZWU7dHJhbnNpdGlvbjphbGwgLjJzIGVhc2U7cGFkZGluZzoyMHB4fWZvb3RlciBpOmhvdmVye3RyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKSBzY2FsZSgxLjEpfSNpbnN0cnVjdGlvbnN7dGV4dC1hbGlnbjpjZW50ZXI7bWFyZ2luLWJvdHRvbToyMHB4fSNpbnN0cnVjdGlvbnMgaDJ7Zm9udC1zaXplOjJyZW07bWFyZ2luLWJvdHRvbToxMHB4fSNpbnN0cnVjdGlvbnMgbGFiZWx7Zm9udC1zaXplOjEuM3JlbX0jZ3JpZHMtY29udGFpbmVye2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kO2FsaWduLWl0ZW1zOmNlbnRlcn0jZ3JpZHMtY29udGFpbmVyICNwbGF5ZXItZ3JpZCAuY2VsbC5zaGlwe2JhY2tncm91bmQtY29sb3I6IzQxY2E3MX0jZ3JpZHMtY29udGFpbmVyICNwbGF5ZXItZ3JpZCAuY2VsbC5zaGlwLmF0dGFja2Vke2JhY2tncm91bmQtY29sb3I6I2UxMWQ0OH0jZ3JpZHMtY29udGFpbmVyICNhaS1ncmlkIC5jZWxsOm5vdCguc2hpcC5hdHRhY2tlZCk6bm90KC5hdHRhY2tlZCk6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZWVlfSNncmlkcy1jb250YWluZXIgLnJvd3tkaXNwbGF5OmZsZXh9I2dyaWRzLWNvbnRhaW5lciAuY2VsbHt3aWR0aDptaW4oNTRweCw0dncpO2hlaWdodDptaW4oNTRweCw0dncpO2JveC1zaGFkb3c6MHB4IDBweCA1cHggMXB4IHJnYmEoNTEsNTEsNTEsLjUpO2JvcmRlci1yYWRpdXM6NXB4O21hcmdpbjoycHg7YmFja2dyb3VuZC1jb2xvcjojMzM0MTU1O3RyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAxMDBtcyBlYXNlLWluLW91dH0jZ3JpZHMtY29udGFpbmVyIC5jZWxsLnNoaXAuYXR0YWNrZWR7YmFja2dyb3VuZC1jb2xvcjojZTExZDQ4fSNncmlkcy1jb250YWluZXIgLmNlbGwuYXR0YWNrZWR7YmFja2dyb3VuZC1jb2xvcjojNjQ3NDhifSNncmlkcy1jb250YWluZXIgcHtmb250LXN0eWxlOml0YWxpYzt0ZXh0LWFsaWduOmNlbnRlcjttYXJnaW4tdG9wOjEwcHg7Zm9udC1zaXplOjEuMXJlbX1kaWFsb2d7b3BhY2l0eTowO3RyYW5zZm9ybTpzY2FsZVkoMCk7YmFja2dyb3VuZC1jb2xvcjojMzM0MTU1O2JvcmRlcjpub25lO2JvcmRlci1yYWRpdXM6MTBweDtjb2xvcjojZWVlO2ZvbnQtc2l6ZToyLjNyZW07Ym94LXNoYWRvdzo1cHggNXB4IDVweCAycHggcmdiYSg1MSw1MSw1MSwuOCk7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjthbGlnbi1pdGVtczpjZW50ZXI7dHJhbnNpdGlvbjpvcGFjaXR5IDMwMG1zIGVhc2UtaW4tb3V0LHRyYW5zZm9ybSAzMDBtcyBlYXNlLWluLW91dH1kaWFsb2dbb3Blbl17b3BhY2l0eToxO3RyYW5zZm9ybTpzY2FsZVkoMSl9ZGlhbG9nIHB7bWFyZ2luLWJvdHRvbTo0MHB4O2ZvbnQtd2VpZ2h0OmJvbGR9ZGlhbG9nIGJ1dHRvbntmb250LXNpemU6MnJlbTtwYWRkaW5nOjIwcHg7Ym9yZGVyOm5vbmU7Ym9yZGVyLXJhZGl1czo1cHg7Y3Vyc29yOnBvaW50ZXI7YmFja2dyb3VuZC1jb2xvcjojZWVlO29wYWNpdHk6Ljc7dHJhbnNpdGlvbjpvcGFjaXR5IDIwMG1zIGVhc2UtaW4tb3V0fWRpYWxvZyBidXR0b246aG92ZXJ7b3BhY2l0eToxfWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy9zdHlsZXMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFXQSxXQUNFLGdDQUFBLENBQ0EscUNBQUEsQ0FFRixZQUNFLG1DQUFBLENBQ0Esa0NBQUEsQ0FHRixxQkFHRSxxQkFBQSxDQVFGLGlCQUNFLGtCQUFBLENBQ0Esb0JBQUEsQ0FDQSxVQUFBLENBQ0EsZUFBQSxDQUNBLGlCQUFBLENBQ0Esa0JBQUEsQ0FDQSxTQUFBLENBRUYsTUFDRSxZQUFBLENBR0YsS0FDRSw4QkFBQSxDQUVGLEdBQ0UsZ0JBQUEsQ0FDQSxnQkFBQSxDQUdGLE9BQ0Usd0JBaERnQixDQWlEaEIsVUFuRE0sQ0FvRE4sWUFBQSxDQUVGLEtBQ0Usb0NBQUEsQ0FDQSxZQUFBLENBQ0EsVUF4REssQ0EwRFAsT0FDRSx3QkExRGdCLENBMkRoQixjQUFBLENBQ0EsWUFBQSxDQUNBLHNCQUFBLENBQ0Esa0JBQUEsQ0FFQSxTQUNFLG9CQUFBLENBQ0EsVUFwRUksQ0F1RU4sU0FDRSxVQXhFSSxDQXlFSix1QkEvQ1MsQ0FnRFQsWUFBQSxDQUVBLGVBQ0UsbUNBQUEsQ0FLTixjQUNFLGlCQUFBLENBQ0Esa0JBQUEsQ0FFQSxpQkFDRSxjQUFBLENBQ0Esa0JBQUEsQ0FFRixvQkFDRSxnQkFBQSxDQUlKLGlCQUNFLFlBQUEsQ0FDQSw0QkFBQSxDQUNBLGtCQUFBLENBR0UseUNBQ0Usd0JBbkdPLENBb0dQLGtEQUNFLHdCQW5HUSxDQXlHWix5RUFDRSxxQkF6R1EsQ0E2R1osc0JBQ0UsWUFBQSxDQUVGLHVCQUNFLG1CQUFBLENBQ0Esb0JBQUEsQ0FDQSw0Q0FBQSxDQUNBLGlCQUFBLENBQ0EsVUFBQSxDQUNBLHdCQTFIYyxDQTJIZCw2Q0FBQSxDQUdFLHFDQUNFLHdCQTVIUSxDQWdJWixnQ0FDRSx3QkFsSVMsQ0FzSWIsbUJBQ0UsaUJBQUEsQ0FDQSxpQkFBQSxDQUNBLGVBQUEsQ0FDQSxnQkFBQSxDQUlKLE9BS0UsU0FBQSxDQUNBLG1CQUFBLENBQ0Esd0JBdkpnQixDQXdKaEIsV0FBQSxDQUNBLGtCQUFBLENBQ0EsVUE1Sk0sQ0E2Sk4sZ0JBQUEsQ0FDQSw0Q0FBQSxDQUNBLFlBQUEsQ0FDQSxxQkFBQSxDQUNBLGtCQUFBLENBQ0EsZ0VBQ0UsQ0FoQkYsYUFDRSxTQUFBLENBQ0EsbUJBQUEsQ0FpQkYsU0FDRSxrQkFBQSxDQUNBLGdCQUFBLENBRUYsY0FDRSxjQUFBLENBQ0EsWUFBQSxDQUNBLFdBQUEsQ0FDQSxpQkFBQSxDQUNBLGNBQUEsQ0FDQSxxQkFoTEksQ0FpTEosVUFBQSxDQUNBLG9DQUFBLENBRUEsb0JBQ0UsU0FBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0ICdub3JtYWxpemUuY3NzJywgJ3Jlc2V0LmNzcyc7XFxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Q2Fpcm86d2dodEA0MDA7NzAwJmRpc3BsYXk9c3dhcCcpO1xcblxcbiR3aGl0ZTogI2VlZTtcXG4kZGFyazogIzMzMztcXG4kZ3JpZC1iYWNrZ3JvdW5kOiAjMzM0MTU1O1xcbiRzaGlwLWNvbG9yOiAjNDFjYTcxO1xcbiRtaXNzZWQtY29sb3I6ICM2NDc0OGI7XFxuJHRvdWNoZWQtY29sb3I6ICNlMTFkNDg7XFxuJGhvdmVyLWNvbG9yOiAjZWVlO1xcblxcbjpyb290LmRhcmsge1xcbiAgLS1jb2xvci1iYXNlLWJnOiByZ2IoMTgsIDE4LCAxOCk7XFxuICAtLWNvbG9yLWJhc2UtdGV4dDogcmdiKDI0MCwgMjQwLCAyNDApO1xcbn1cXG46cm9vdC5saWdodCB7XFxuICAtLWNvbG9yLWJhc2UtYmc6IHJnYigyNDAsIDI0MCwgMjQwKTtcXG4gIC0tY29sb3ItYmFzZS10ZXh0OiByZ2IoMTgsIDE4LCAxOCk7XFxufVxcblxcbiosXFxuKjo6YWZ0ZXIsXFxuKjo6YmVmb3JlIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbiRoZWFkZXItc2l6ZTogOTZweDtcXG4kZm9vdGVyLXNpemU6IDcycHg7XFxuJHNoYWRvdzogMnB4IDJweCAycHggMCByZ2JhKDUxLCA1MSwgNTEsIDAuNik7XFxuJHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XFxuXFxuLnZpc3VhbGx5LWhpZGRlbiB7XFxuICBjbGlwOiByZWN0KDAgMCAwIDApO1xcbiAgY2xpcC1wYXRoOiBpbnNldCg1MCUpO1xcbiAgaGVpZ2h0OiAxcHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gIHdpZHRoOiAxcHg7XFxufVxcbi5oaWRlIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbmJvZHkge1xcbiAgZm9udC1mYW1pbHk6ICdDYWlybycsIHNhbnMtc2VyaWY7XFxufVxcbmgxIHtcXG4gIGZvbnQtc2l6ZTogMy41cmVtO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcblxcbmhlYWRlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JpZC1iYWNrZ3JvdW5kO1xcbiAgY29sb3I6ICR3aGl0ZTtcXG4gIHBhZGRpbmc6IDIwcHg7XFxufVxcbm1haW4ge1xcbiAgbWluLWhlaWdodDogY2FsYygxMDB2aCAtICRoZWFkZXItc2l6ZSAtICRmb290ZXItc2l6ZSk7XFxuICBwYWRkaW5nOiAyMHB4O1xcbiAgY29sb3I6ICRkYXJrO1xcbn1cXG5mb290ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogJGdyaWQtYmFja2dyb3VuZDtcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICBwIHtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICBjb2xvcjogJHdoaXRlO1xcbiAgfVxcblxcbiAgaSB7XFxuICAgIGNvbG9yOiAkd2hpdGU7XFxuICAgIHRyYW5zaXRpb246ICR0cmFuc2l0aW9uO1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcblxcbiAgICAmOmhvdmVyIHtcXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpIHNjYWxlKDEuMSk7XFxuICAgIH1cXG4gIH1cXG59XFxuXFxuI2luc3RydWN0aW9ucyB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcblxcbiAgaDIge1xcbiAgICBmb250LXNpemU6IDJyZW07XFxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XFxuICB9XFxuICBsYWJlbCB7XFxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xcbiAgfVxcbn1cXG5cXG4jZ3JpZHMtY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICAjcGxheWVyLWdyaWQge1xcbiAgICAuY2VsbC5zaGlwIHtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2hpcC1jb2xvcjtcXG4gICAgICAmLmF0dGFja2VkIHtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR0b3VjaGVkLWNvbG9yO1xcbiAgICAgIH1cXG4gICAgfVxcbiAgfVxcblxcbiAgI2FpLWdyaWQge1xcbiAgICAuY2VsbDpub3QoLnNoaXAuYXR0YWNrZWQpOm5vdCguYXR0YWNrZWQpOmhvdmVyIHtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaG92ZXItY29sb3I7XFxuICAgIH1cXG4gIH1cXG5cXG4gIC5yb3cge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgfVxcbiAgLmNlbGwge1xcbiAgICB3aWR0aDogbWluKDU0cHgsIDR2dyk7XFxuICAgIGhlaWdodDogbWluKDU0cHgsIDR2dyk7XFxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IDFweCByZ2JhKDUxLCA1MSwgNTEsIDAuNSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgbWFyZ2luOiAycHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmlkLWJhY2tncm91bmQ7XFxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMTAwbXMgZWFzZS1pbi1vdXQ7XFxuXFxuICAgICYuc2hpcCB7XFxuICAgICAgJi5hdHRhY2tlZCB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdG91Y2hlZC1jb2xvcjtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgJi5hdHRhY2tlZCB7XFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1pc3NlZC1jb2xvcjtcXG4gICAgfVxcbiAgfVxcblxcbiAgcCB7XFxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcbiAgICBmb250LXNpemU6IDEuMXJlbTtcXG4gIH1cXG59XFxuXFxuZGlhbG9nIHtcXG4gICZbb3Blbl0ge1xcbiAgICBvcGFjaXR5OiAxO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlWSgxKTtcXG4gIH1cXG4gIG9wYWNpdHk6IDA7XFxuICB0cmFuc2Zvcm06IHNjYWxlWSgwKTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICRncmlkLWJhY2tncm91bmQ7XFxuICBib3JkZXI6IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgY29sb3I6ICR3aGl0ZTtcXG4gIGZvbnQtc2l6ZTogMi4zcmVtO1xcbiAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggMnB4IHJnYmEoNTEsIDUxLCA1MSwgMC44KTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHRyYW5zaXRpb246XFxuICAgIG9wYWNpdHkgMzAwbXMgZWFzZS1pbi1vdXQsXFxuICAgIHRyYW5zZm9ybSAzMDBtcyBlYXNlLWluLW91dDtcXG5cXG4gIHAge1xcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG4gIH1cXG4gIGJ1dHRvbiB7XFxuICAgIGZvbnQtc2l6ZTogMnJlbTtcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xcbiAgICBvcGFjaXR5OiAwLjc7XFxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMjAwbXMgZWFzZS1pbi1vdXQ7XFxuXFxuICAgICY6aG92ZXIge1xcbiAgICAgIG9wYWNpdHk6IDE7XFxuICAgIH1cXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbiBodG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgXFxgbWFpblxcYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gXFxgaDFcXGAgZWxlbWVudHMgd2l0aGluIFxcYHNlY3Rpb25cXGAgYW5kXG4gKiBcXGBhcnRpY2xlXFxgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgXFxgZW1cXGAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgXFxgZW1cXGAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IFxcYHN1YlxcYCBhbmQgXFxgc3VwXFxgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBcXGBmaWVsZHNldFxcYCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIFxcYGZpZWxkc2V0XFxgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gXFxgaW5oZXJpdFxcYCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jc3Mvbm9ybWFsaXplLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSwyRUFBMkU7O0FBRTNFOytFQUMrRTs7QUFFL0U7OztFQUdFOztDQUVEO0VBQ0MsaUJBQWlCLEVBQUUsTUFBTTtFQUN6Qiw4QkFBOEIsRUFBRSxNQUFNO0FBQ3hDOztBQUVBOytFQUMrRTs7QUFFL0U7O0VBRUU7O0FBRUY7RUFDRSxTQUFTO0FBQ1g7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSxjQUFjO0FBQ2hCOztBQUVBOzs7RUFHRTs7QUFFRjtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7O0FBRUE7K0VBQytFOztBQUUvRTs7O0VBR0U7O0FBRUY7RUFDRSx1QkFBdUIsRUFBRSxNQUFNO0VBQy9CLFNBQVMsRUFBRSxNQUFNO0VBQ2pCLGlCQUFpQixFQUFFLE1BQU07QUFDM0I7O0FBRUE7OztFQUdFOztBQUVGO0VBQ0UsaUNBQWlDLEVBQUUsTUFBTTtFQUN6QyxjQUFjLEVBQUUsTUFBTTtBQUN4Qjs7QUFFQTsrRUFDK0U7O0FBRS9FOztFQUVFOztBQUVGO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBOzs7RUFHRTs7QUFFRjtFQUNFLG1CQUFtQixFQUFFLE1BQU07RUFDM0IsMEJBQTBCLEVBQUUsTUFBTTtFQUNsQyxpQ0FBaUMsRUFBRSxNQUFNO0FBQzNDOztBQUVBOztFQUVFOztBQUVGOztFQUVFLG1CQUFtQjtBQUNyQjs7QUFFQTs7O0VBR0U7O0FBRUY7OztFQUdFLGlDQUFpQyxFQUFFLE1BQU07RUFDekMsY0FBYyxFQUFFLE1BQU07QUFDeEI7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSxjQUFjO0FBQ2hCOztBQUVBOzs7RUFHRTs7QUFFRjs7RUFFRSxjQUFjO0VBQ2QsY0FBYztFQUNkLGtCQUFrQjtFQUNsQix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBOytFQUMrRTs7QUFFL0U7O0VBRUU7O0FBRUY7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7K0VBQytFOztBQUUvRTs7O0VBR0U7O0FBRUY7Ozs7O0VBS0Usb0JBQW9CLEVBQUUsTUFBTTtFQUM1QixlQUFlLEVBQUUsTUFBTTtFQUN2QixpQkFBaUIsRUFBRSxNQUFNO0VBQ3pCLFNBQVMsRUFBRSxNQUFNO0FBQ25COztBQUVBOzs7RUFHRTs7QUFFRjtRQUNRLE1BQU07RUFDWixpQkFBaUI7QUFDbkI7O0FBRUE7OztFQUdFOztBQUVGO1NBQ1MsTUFBTTtFQUNiLG9CQUFvQjtBQUN0Qjs7QUFFQTs7RUFFRTs7QUFFRjs7OztFQUlFLDBCQUEwQjtBQUM1Qjs7QUFFQTs7RUFFRTs7QUFFRjs7OztFQUlFLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7O0VBRUU7O0FBRUY7Ozs7RUFJRSw4QkFBOEI7QUFDaEM7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSw4QkFBOEI7QUFDaEM7O0FBRUE7Ozs7O0VBS0U7O0FBRUY7RUFDRSxzQkFBc0IsRUFBRSxNQUFNO0VBQzlCLGNBQWMsRUFBRSxNQUFNO0VBQ3RCLGNBQWMsRUFBRSxNQUFNO0VBQ3RCLGVBQWUsRUFBRSxNQUFNO0VBQ3ZCLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLG1CQUFtQixFQUFFLE1BQU07QUFDN0I7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSxjQUFjO0FBQ2hCOztBQUVBOzs7RUFHRTs7QUFFRjs7RUFFRSxzQkFBc0IsRUFBRSxNQUFNO0VBQzlCLFVBQVUsRUFBRSxNQUFNO0FBQ3BCOztBQUVBOztFQUVFOztBQUVGOztFQUVFLFlBQVk7QUFDZDs7QUFFQTs7O0VBR0U7O0FBRUY7RUFDRSw2QkFBNkIsRUFBRSxNQUFNO0VBQ3JDLG9CQUFvQixFQUFFLE1BQU07QUFDOUI7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7OztFQUdFOztBQUVGO0VBQ0UsMEJBQTBCLEVBQUUsTUFBTTtFQUNsQyxhQUFhLEVBQUUsTUFBTTtBQUN2Qjs7QUFFQTsrRUFDK0U7O0FBRS9FOztFQUVFOztBQUVGO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTs7RUFFRTs7QUFFRjtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTsrRUFDK0U7O0FBRS9FOztFQUVFOztBQUVGO0VBQ0UsYUFBYTtBQUNmOztBQUVBOztFQUVFOztBQUVGO0VBQ0UsYUFBYTtBQUNmXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cXG5cXG4vKiBEb2N1bWVudFxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxcbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxcbiAqL1xcblxcbiBodG1sIHtcXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXFxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cXG59XFxuXFxuLyogU2VjdGlvbnNcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5ib2R5IHtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuLyoqXFxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXFxuICovXFxuXFxubWFpbiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLyoqXFxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuaDEge1xcbiAgZm9udC1zaXplOiAyZW07XFxuICBtYXJnaW46IDAuNjdlbSAwO1xcbn1cXG5cXG4vKiBHcm91cGluZyBjb250ZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxcbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxcbiAqL1xcblxcbmhyIHtcXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXFxuICBoZWlnaHQ6IDA7IC8qIDEgKi9cXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnByZSB7XFxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXFxufVxcblxcbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXFxuICovXFxuXFxuYSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG59XFxuXFxuLyoqXFxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmFiYnJbdGl0bGVdIHtcXG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5iLFxcbnN0cm9uZyB7XFxuICBmb250LXdlaWdodDogYm9sZGVyO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5jb2RlLFxcbmtiZCxcXG5zYW1wIHtcXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxuc21hbGwge1xcbiAgZm9udC1zaXplOiA4MCU7XFxufVxcblxcbi8qKlxcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxcbiAqIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5zdWIsXFxuc3VwIHtcXG4gIGZvbnQtc2l6ZTogNzUlO1xcbiAgbGluZS1oZWlnaHQ6IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcblxcbnN1YiB7XFxuICBib3R0b206IC0wLjI1ZW07XFxufVxcblxcbnN1cCB7XFxuICB0b3A6IC0wLjVlbTtcXG59XFxuXFxuLyogRW1iZWRkZWQgY29udGVudFxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cXG4gKi9cXG5cXG5pbWcge1xcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xcbn1cXG5cXG4vKiBGb3Jtc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmJ1dHRvbixcXG5pbnB1dCxcXG5vcHRncm91cCxcXG5zZWxlY3QsXFxudGV4dGFyZWEge1xcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cXG4gIG1hcmdpbjogMDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxcbiAqL1xcblxcbmJ1dHRvbixcXG5pbnB1dCB7IC8qIDEgKi9cXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXFxuICovXFxuXFxuYnV0dG9uLFxcbnNlbGVjdCB7IC8qIDEgKi9cXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmJ1dHRvbixcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl0sXFxuW3R5cGU9XFxcInJlc2V0XFxcIl0sXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxcbiAqL1xcblxcbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl06Oi1tb3otZm9jdXMtaW5uZXIsXFxuW3R5cGU9XFxcInJlc2V0XFxcIl06Oi1tb3otZm9jdXMtaW5uZXIsXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdOjotbW96LWZvY3VzLWlubmVyIHtcXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcXG4gIHBhZGRpbmc6IDA7XFxufVxcblxcbi8qKlxcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cXG4gKi9cXG5cXG5idXR0b246LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcImJ1dHRvblxcXCJdOi1tb3otZm9jdXNyaW5nLFxcblt0eXBlPVxcXCJyZXNldFxcXCJdOi1tb3otZm9jdXNyaW5nLFxcblt0eXBlPVxcXCJzdWJtaXRcXFwiXTotbW96LWZvY3VzcmluZyB7XFxuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cXG4gKi9cXG5cXG5maWVsZHNldCB7XFxuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXFxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxcbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5sZWdlbmQge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXFxuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cXG4gKi9cXG5cXG5wcm9ncmVzcyB7XFxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxcbiAqL1xcblxcbnRleHRhcmVhIHtcXG4gIG92ZXJmbG93OiBhdXRvO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXFxuICovXFxuXFxuW3R5cGU9XFxcImNoZWNrYm94XFxcIl0sXFxuW3R5cGU9XFxcInJhZGlvXFxcIl0ge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xcbiAgcGFkZGluZzogMDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXFxuICovXFxuXFxuW3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxcblt0eXBlPVxcXCJudW1iZXJcXFwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XFxuICBoZWlnaHQ6IGF1dG87XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxcbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxcbiAqL1xcblxcblt0eXBlPVxcXCJzZWFyY2hcXFwiXSB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxcbiAqL1xcblxcblt0eXBlPVxcXCJzZWFyY2hcXFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxcbiAqL1xcblxcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cXG59XFxuXFxuLyogSW50ZXJhY3RpdmVcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cXG4gKi9cXG5cXG5kZXRhaWxzIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4vKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5zdW1tYXJ5IHtcXG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcXG59XFxuXFxuLyogTWlzY1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxcbiAqL1xcblxcbnRlbXBsYXRlIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxcbiAqL1xcblxcbltoaWRkZW5dIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC8gXG4gICB2Mi4wIHwgMjAxMTAxMjZcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXG4qL1xuXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxuYiwgdSwgaSwgY2VudGVyLFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCwgXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG5cdGJvcmRlcjogMDtcblx0Zm9udC1zaXplOiAxMDAlO1xuXHRmb250OiBpbmhlcml0O1xuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XG5cdGRpc3BsYXk6IGJsb2NrO1xufVxuYm9keSB7XG5cdGxpbmUtaGVpZ2h0OiAxO1xufVxub2wsIHVsIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcbn1cbmJsb2NrcXVvdGUsIHEge1xuXHRxdW90ZXM6IG5vbmU7XG59XG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcblx0Y29udGVudDogJyc7XG5cdGNvbnRlbnQ6IG5vbmU7XG59XG50YWJsZSB7XG5cdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jc3MvcmVzZXQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBOzs7Q0FHQzs7QUFFRDs7Ozs7Ozs7Ozs7OztDQWFDLFNBQVM7Q0FDVCxVQUFVO0NBQ1YsU0FBUztDQUNULGVBQWU7Q0FDZixhQUFhO0NBQ2Isd0JBQXdCO0FBQ3pCO0FBQ0EsZ0RBQWdEO0FBQ2hEOztDQUVDLGNBQWM7QUFDZjtBQUNBO0NBQ0MsY0FBYztBQUNmO0FBQ0E7Q0FDQyxnQkFBZ0I7QUFDakI7QUFDQTtDQUNDLFlBQVk7QUFDYjtBQUNBOztDQUVDLFdBQVc7Q0FDWCxhQUFhO0FBQ2Q7QUFDQTtDQUNDLHlCQUF5QjtDQUN6QixpQkFBaUI7QUFDbEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC8gXFxuICAgdjIuMCB8IDIwMTEwMTI2XFxuICAgTGljZW5zZTogbm9uZSAocHVibGljIGRvbWFpbilcXG4qL1xcblxcbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXFxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxcbmIsIHUsIGksIGNlbnRlcixcXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLCBcXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIFxcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XFxuXFx0bWFyZ2luOiAwO1xcblxcdHBhZGRpbmc6IDA7XFxuXFx0Ym9yZGVyOiAwO1xcblxcdGZvbnQtc2l6ZTogMTAwJTtcXG5cXHRmb250OiBpbmhlcml0O1xcblxcdHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xcbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsIFxcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XFxuXFx0ZGlzcGxheTogYmxvY2s7XFxufVxcbmJvZHkge1xcblxcdGxpbmUtaGVpZ2h0OiAxO1xcbn1cXG5vbCwgdWwge1xcblxcdGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcbmJsb2NrcXVvdGUsIHEge1xcblxcdHF1b3Rlczogbm9uZTtcXG59XFxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXFxucTpiZWZvcmUsIHE6YWZ0ZXIge1xcblxcdGNvbnRlbnQ6ICcnO1xcblxcdGNvbnRlbnQ6IG5vbmU7XFxufVxcbnRhYmxlIHtcXG5cXHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcblxcdGJvcmRlci1zcGFjaW5nOiAwO1xcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuc2Nzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5zY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IGNyZWF0ZVNoaXAgZnJvbSAnLi9zaGlwJztcblxuLyoqXG4gKiBDcmVhdGUgYSBjZWxsIGZvciB0aGUgZ2FtZSBib2FyZCB3aXRoIGFuIGFscmVhZHlBdHRhY2tlZCBhbmQgc2hpcCBwcm9wZXJ0eVxuICogQHJldHVybnMgQSBjZWxsIG9iamVjdCBmb3IgdGhlIGdhbWUgYm9hcmRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUdhbWVCb2FyZENlbGwoKSB7XG4gIGNvbnN0IGFscmVhZHlBdHRhY2tlZCA9IGZhbHNlO1xuICBjb25zdCBzaGlwID0gbnVsbDtcblxuICByZXR1cm4geyBhbHJlYWR5QXR0YWNrZWQsIHNoaXAgfTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBnYW1lIGJvYXJkIG9mIHNpemUgMTB4MTBcbiAqIEByZXR1cm5zIEEgZ2FtZSBib2FyZCBvYmplY3RcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUdhbWVCb2FyZCgpIHtcbiAgY29uc3Qgc2l6ZSA9IDEwO1xuICBjb25zdCBib2FyZCA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkgKz0gMSkge1xuICAgIGNvbnN0IHJvdyA9IFtdO1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgc2l6ZTsgaiArPSAxKSB7XG4gICAgICByb3cucHVzaChjcmVhdGVHYW1lQm9hcmRDZWxsKCkpO1xuICAgIH1cbiAgICBib2FyZC5wdXNoKHJvdyk7XG4gIH1cbiAgY29uc3Qgc2hpcHMgPSBbXTtcbiAgY29uc3Qgc2hpcHNMZW5ndGggPSBbNSwgNCwgMywgMywgMl07XG4gIGxldCBjdXJyU2hpcEluZGV4ID0gMDtcblxuICAvKipcbiAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBwb3NpdGlvbiBpcyB2YWxpZCAoaW5zaWRlIHRoZSBnYW1lIGJvYXJkKSwgb3RoZXJ3aXNlIGZhbHNlXG4gICAqIEBwYXJhbSB7QXJyYXl9IHBQb3NpdGlvbiBUaGUgcG9zaXRpb24gdG8gdmFsaWRhdGUgKGZvcm1hdDogW3gsIHldKVxuICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwb3NpdGlvbiBpcyB2YWxpZCwgb3RoZXJ3aXNlIGZhbHNlXG4gICAqL1xuICBjb25zdCBpc1Bvc2l0aW9uVmFsaWQgPSAocFBvc2l0aW9uKSA9PiB7XG4gICAgaWYgKFxuICAgICAgcFBvc2l0aW9uWzBdIDwgMCB8fFxuICAgICAgcFBvc2l0aW9uWzBdID49IHNpemUgfHxcbiAgICAgIHBQb3NpdGlvblsxXSA8IDAgfHxcbiAgICAgIHBQb3NpdGlvblsxXSA+PSBzaXplXG4gICAgKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH07XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgcG9zaXRpb24gYW5kIGxlbmd0aCBvZiB0aGUgc2hpcCBhcmUgd2l0aGluIHRoZSBib2FyZCwgb3RoZXJ3aXNlIGZhbHNlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBwTGVuZ3RoIFRoZSBsZW5ndGggb2YgdGhlIHNoaXAgdG8gcGxhY2VcbiAgICogQHBhcmFtIHtBcnJheX0gcFBvc2l0aW9uIFRoZSBwb3NpdGlvbiB0byB2YWxpZGF0ZSAoZm9ybWF0OiBbeCwgeV0pXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gcEhvcml6b250YWwgVHJ1ZSBpZiB0aGUgc2hpcCBpcyBwb3NpdGlvbmVkIGhvcml6b250YWxseSwgZmFsc2UgaWYgaXRzIHBvc2l0aW9uZWQgdmVydGljYWxseVxuICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBwb3NpdGlvbiBhbmQgbGVuZ3RoIG9mIHRoZSBzaGlwIGFyZSB3aXRoaW4gdGhlIGJvYXJkLCBvdGhlcndpc2UgZmFsc2VcbiAgICovXG4gIGNvbnN0IGlzUG9zaXRpb25BbmRMZW5ndGhWYWxpZCA9IChwTGVuZ3RoLCBwUG9zaXRpb24sIHBIb3Jpem9udGFsID0gdHJ1ZSkgPT4ge1xuICAgIGlmIChwSG9yaXpvbnRhbCkge1xuICAgICAgaWYgKHBQb3NpdGlvblswXSArIHBMZW5ndGggLSAxID49IHNpemUpIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2UgaWYgKHBQb3NpdGlvblsxXSArIHBMZW5ndGggLSAxID49IHNpemUpIHJldHVybiBmYWxzZTtcblxuICAgIHJldHVybiB0cnVlO1xuICB9O1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIHBvc2l0aW9uIG9mIHRoZSBzaGlwIGlzIGFscmVhZHkgb2NjdXBpZWQgYnkgYW5vdGhlciBzaGlwLCBvdGhlcndpc2UgZmFsc2VcbiAgICogQHBhcmFtIHtudW1iZXJ9IHBMZW5ndGggVGhlIGxlbmd0aCBvZiB0aGUgc2hpcCB0byBwbGFjZVxuICAgKiBAcGFyYW0ge0FycmF5fSBwUG9zaXRpb24gVGhlIHBvc2l0aW9uIHRvIHZhbGlkYXRlIChmb3JtYXQ6IFt4LCB5XSlcbiAgICogQHBhcmFtIHtib29sZWFufSBwSG9yaXpvbnRhbCBUcnVlIGlmIHRoZSBzaGlwIGlzIHBvc2l0aW9uZWQgaG9yaXpvbnRhbGx5LCBmYWxzZSBpZiBpdHMgcG9zaXRpb25lZCB2ZXJ0aWNhbGx5XG4gICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHBvc2l0aW9uIG9mIHRoZSBzaGlwIGlzIGFscmVhZHkgb2NjdXBpZWQgYnkgYW5vdGhlciBzaGlwLCBvdGhlcndpc2UgZmFsc2VcbiAgICovXG4gIGNvbnN0IGlzUG9zaXRpb25PY2N1cGllZCA9IChwTGVuZ3RoLCBwUG9zaXRpb24sIHBIb3Jpem9udGFsID0gdHJ1ZSkgPT4ge1xuICAgIGlmIChwSG9yaXpvbnRhbCkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwTGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKGJvYXJkW3BQb3NpdGlvblswXSArIGldW3BQb3NpdGlvblsxXV0uc2hpcCAhPT0gbnVsbCkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcExlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGlmIChib2FyZFtwUG9zaXRpb25bMF1dW3BQb3NpdGlvblsxXSArIGldLnNoaXAgIT09IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfTtcblxuICAvKipcbiAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBzaGlwIGlzIHBsYWNhYmxlIChpbnNpZGUgdGhlIGdhbWUgYm9hcmQpLCBvdGhlcndpc2UgZmFsc2VcbiAgICogQHBhcmFtIHtudW1iZXJ9IHBMZW5ndGggVGhlIGxlbmd0aCBvZiB0aGUgc2hpcCB0byBwbGFjZVxuICAgKiBAcGFyYW0ge0FycmF5fSBwUG9zaXRpb24gVGhlIHBvc2l0aW9uIHRvIHZhbGlkYXRlIChmb3JtYXQ6IFt4LCB5XSlcbiAgICogQHBhcmFtIHtib29sZWFufSBwSG9yaXpvbnRhbCBUcnVlIGlmIHRoZSBzaGlwIGlzIHBvc2l0aW9uZWQgaG9yaXpvbnRhbGx5LCBmYWxzZSBpZiBpdHMgcG9zaXRpb25lZCB2ZXJ0aWNhbGx5XG4gICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHBvc2l0aW9uIG9mIHRoZSBzaGlwIGlzIHZhbGlkLCBvdGhlcndpc2UgZmFsc2VcbiAgICovXG4gIGNvbnN0IGlzU2hpcFBsYWNhYmxlID0gKHBMZW5ndGgsIHBQb3NpdGlvbiwgcEhvcml6b250YWwgPSB0cnVlKSA9PiB7XG4gICAgaWYgKCFpc1Bvc2l0aW9uVmFsaWQocFBvc2l0aW9uKSkgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghaXNQb3NpdGlvbkFuZExlbmd0aFZhbGlkKHBMZW5ndGgsIHBQb3NpdGlvbiwgcEhvcml6b250YWwpKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiAhaXNQb3NpdGlvbk9jY3VwaWVkKHBMZW5ndGgsIHBQb3NpdGlvbiwgcEhvcml6b250YWwpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBQbGFjZSBhIHNoaXAgb24gdGhlIGdhbWUgYm9hcmRcbiAgICogQHBhcmFtIHtudW1iZXJ9IHBMZW5ndGggVGhlIGxlbmd0aCBvZiB0aGUgc2hpcCB0byBwbGFjZVxuICAgKiBAcGFyYW0ge0FycmF5fSBwUG9zaXRpb24gVGhlIHBvc2l0aW9uIHRvIHZhbGlkYXRlIChmb3JtYXQ6IFt4LCB5XSlcbiAgICogQHBhcmFtIHtib29sZWFufSBwSG9yaXpvbnRhbCBUcnVlIGlmIHRoZSBzaGlwIGlzIHBvc2l0aW9uZWQgaG9yaXpvbnRhbGx5LCBmYWxzZSBpZiBpdHMgcG9zaXRpb25lZCB2ZXJ0aWNhbGx5XG4gICAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHNoaXAgaGFzIGJlZW4gcGxhY2VkLCBvdGhlcndpc2UgZmFsc2VcbiAgICovXG4gIGNvbnN0IHBsYWNlU2hpcCA9IChwTGVuZ3RoLCBwUG9zaXRpb24sIHBIb3Jpem9udGFsID0gdHJ1ZSkgPT4ge1xuICAgIGlmICghaXNTaGlwUGxhY2FibGUocExlbmd0aCwgcFBvc2l0aW9uLCBwSG9yaXpvbnRhbCkpIHJldHVybiBmYWxzZTtcblxuICAgIGNvbnN0IG5ld1NoaXAgPSBjcmVhdGVTaGlwKHBMZW5ndGgpO1xuICAgIHNoaXBzLnB1c2gobmV3U2hpcCk7XG4gICAgaWYgKHBIb3Jpem9udGFsKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBMZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBib2FyZFtwUG9zaXRpb25bMF0gKyBpXVtwUG9zaXRpb25bMV1dLnNoaXAgPSBuZXdTaGlwO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBMZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBib2FyZFtwUG9zaXRpb25bMF1dW3BQb3NpdGlvblsxXSArIGldLnNoaXAgPSBuZXdTaGlwO1xuICAgICAgfVxuICAgIH1cblxuICAgIGN1cnJTaGlwSW5kZXggKz0gMTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcblxuICAvKipcbiAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBhdHRhY2sgaXMgcG9zc2libGUgKGluc2lkZSB0aGUgZ2FtZSBib2FyZCBhbmQgdGhhdCBwb3NpdGlvbiBoYXMgbm90IGFscmVhZHkgYmVlbiBhdHRhY2tlZCksIG90aGVyd2lzZSBmYWxzZVxuICAgKiBAcGFyYW0ge0FycmF5fSBwUG9zaXRpb24gVGhlIHBvc2l0aW9uIHRvIHZhbGlkYXRlIChmb3JtYXQ6IFt4LCB5XSlcbiAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIGF0dGFjayBpcyBwb3NzaWJsZSwgb3RoZXJ3aXNlIGZhbHNlXG4gICAqL1xuICBjb25zdCBpc0F0dGFja1Bvc3NpYmxlID0gKHBQb3NpdGlvbikgPT4ge1xuICAgIGlmICghaXNQb3NpdGlvblZhbGlkKHBQb3NpdGlvbikpIHJldHVybiBmYWxzZTtcblxuICAgIGlmIChib2FyZFtwUG9zaXRpb25bMF1dW3BQb3NpdGlvblsxXV0uYWxyZWFkeUF0dGFja2VkKSByZXR1cm4gZmFsc2U7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcblxuICAvKipcbiAgICogQXR0YWNrIGEgc2hpcCBvbiB0aGUgZ2FtZSBib2FyZFxuICAgKiBAcGFyYW0ge0FycmF5fSBwUG9zaXRpb24gVGhlIHBvc2l0aW9uIHRvIHZhbGlkYXRlIChmb3JtYXQ6IFt4LCB5XSlcbiAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIGF0dGFjayBwb3NpdGlvbiBpcyB2YWxpZCwgb3RoZXJ3aXNlIGZhbHNlXG4gICAqL1xuICBjb25zdCByZWNlaXZlQXR0YWNrID0gKHBQb3NpdGlvbikgPT4ge1xuICAgIGlmICghaXNBdHRhY2tQb3NzaWJsZShwUG9zaXRpb24pKSByZXR1cm4gZmFsc2U7XG5cbiAgICBpZiAoYm9hcmRbcFBvc2l0aW9uWzBdXVtwUG9zaXRpb25bMV1dLnNoaXAgIT09IG51bGwpIHtcbiAgICAgIGJvYXJkW3BQb3NpdGlvblswXV1bcFBvc2l0aW9uWzFdXS5zaGlwLmhpdCgpO1xuICAgIH1cblxuICAgIGJvYXJkW3BQb3NpdGlvblswXV1bcFBvc2l0aW9uWzFdXS5hbHJlYWR5QXR0YWNrZWQgPSB0cnVlO1xuXG4gICAgcmV0dXJuIHRydWU7XG4gIH07XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdHJ1ZSBpZiBhbGwgc2hpcCBvZiB0aGUgZ2FtZSBib2FyZCBhcmUgc3Vuaywgb3RoZXJ3aXNlIGZhbHNlXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIGFsbCBzaGlwIG9mIHRoZSBnYW1lIGJvYXJkIGFyZSBzdW5rLCBvdGhlcndpc2UgZmFsc2VcbiAgICovXG4gIGNvbnN0IGlzQWxsU2hpcHNTdW5rID0gKCkgPT4ge1xuICAgIGNvbnN0IG5vdFN1bmtTaGlwID0gc2hpcHMuZmluZCgoc2hpcCkgPT4gIXNoaXAuaXNTdW5rKCkpO1xuICAgIHJldHVybiB0eXBlb2Ygbm90U3Vua1NoaXAgPT09ICd1bmRlZmluZWQnO1xuICB9O1xuXG4gIC8qKlxuICAgKiBHZXQgYWxsIHRoZSBwb3NzaWJsZSBhdHRhY2sgcG9zaXRpb25zXG4gICAqIEByZXR1cm5zIHtBcnJheX0gQW4gYXJyYXkgb2YgcG9zc2libGUgYXR0YWNrIHBvc2l0aW9uc1xuICAgKi9cbiAgY29uc3QgZ2V0QXR0YWNrUG9zaXRpb25zID0gKCkgPT4ge1xuICAgIGNvbnN0IGF0dGFja1Bvc2l0aW9ucyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYm9hcmQubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgYm9hcmRbaV0ubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgaWYgKCFib2FyZFtpXVtqXS5hbHJlYWR5QXR0YWNrZWQpIHtcbiAgICAgICAgICBhdHRhY2tQb3NpdGlvbnMucHVzaChbaSwgal0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhdHRhY2tQb3NpdGlvbnM7XG4gIH07XG5cbiAgLyoqXG4gICAqIEtub3cgaWYgdGhpcyBwb3NpdGlvbiBoYXMgYWxyZWFkeSBiZWVuIGF0dGFja2VkXG4gICAqIEBwYXJhbSB7QXJyYXl9IHBQb3NpdGlvbiBUaGUgcG9zaXRpb24gdG8gdmFsaWRhdGUgKGZvcm1hdDogW3gsIHldKVxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBBIGNlbGwgb2JqZWN0XG4gICAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IFRocm93cyBhbiBlcnJvciBpcyB0aGUgcG9zaXRpb24gaXMgb3V0c2lkZSB0aGUgZ2FtZSBib2FyZFxuICAgKi9cbiAgY29uc3QgZ2V0Q2VsbFN0YXRlID0gKHBQb3NpdGlvbikgPT4ge1xuICAgIGlmICghaXNQb3NpdGlvblZhbGlkKHBQb3NpdGlvbikpIHtcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdUaGlzIHBvc2l0aW9uIGlzIG91dHNpZGUgdGhlIGdhbWUgYm9hcmQnKTtcbiAgICB9XG4gICAgcmV0dXJuIGJvYXJkW3BQb3NpdGlvblswXV1bcFBvc2l0aW9uWzFdXTtcbiAgfTtcblxuICAvKipcbiAgICogUGxhY2UgYWxsIHNoaXBzIHJhbmRvbWx5IG9uIHRoZSBib2FyZFxuICAgKi9cbiAgY29uc3QgcGxhY2VTaGlwc1JhbmRvbWx5ID0gKCkgPT4ge1xuICAgIGxldCBob3Jpem9udGFsO1xuICAgIGxldCB4O1xuICAgIGxldCB5O1xuXG4gICAgc2hpcHNMZW5ndGguZm9yRWFjaCgoc2hpcExlbmd0aCkgPT4ge1xuICAgICAgZG8ge1xuICAgICAgICBob3Jpem9udGFsID0gTWF0aC5yYW5kb20oKSA+IDAuNTtcblxuICAgICAgICBpZiAoaG9yaXpvbnRhbCkge1xuICAgICAgICAgIHggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoc2l6ZSAtIHNoaXBMZW5ndGggKyAxKSk7XG4gICAgICAgICAgeSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHNpemUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBzaXplKTtcbiAgICAgICAgICB5ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHNpemUgLSBzaGlwTGVuZ3RoICsgMSkpO1xuICAgICAgICB9XG4gICAgICB9IHdoaWxlICghcGxhY2VTaGlwKHNoaXBMZW5ndGgsIFt4LCB5XSwgaG9yaXpvbnRhbCkpO1xuICAgIH0pO1xuICB9O1xuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGxlbmd0aCBvZiB0aGUgbmV4dCBzaGlwIHRvIHBsYWNlXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IFRoZSBsZW5ndGggb2YgdGhlIG5leHQgc2hpcCB0byBwbGFjZSBvciBudWxsIGlmIGFsbCBzaGlwIGFyZSBhbHJlYWR5IHBsYWNlZFxuICAgKi9cbiAgY29uc3QgZ2V0TmV4dFNoaXBMZW5ndGggPSAoKSA9PiB7XG4gICAgaWYgKHNoaXBzLmxlbmd0aCA8IHNoaXBzTGVuZ3RoLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHNoaXBzTGVuZ3RoW2N1cnJTaGlwSW5kZXhdO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICAvKipcbiAgICogUmV0dXJucyB0cnVlIGlmIGFsbCBzaGlwcyBhcmUgcGxhY2VkIG9uIHRoZSBib2FyZFxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBhbGwgc2hpcHMgYXJlIHBsYWNlZCBvbiB0aGUgYm9hcmQsIG90aGVyd2lzZSBmYWxzZVxuICAgKi9cbiAgY29uc3QgaXNBbGxTaGlwc1BsYWNlZCA9ICgpID0+IHNoaXBzLmxlbmd0aCA9PT0gNTtcblxuICByZXR1cm4ge1xuICAgIHBsYWNlU2hpcCxcbiAgICByZWNlaXZlQXR0YWNrLFxuICAgIGlzQWxsU2hpcHNTdW5rLFxuICAgIGdldEF0dGFja1Bvc2l0aW9ucyxcbiAgICBnZXRDZWxsU3RhdGUsXG4gICAgcGxhY2VTaGlwc1JhbmRvbWx5LFxuICAgIHByZXZpZXdOZXh0U2hpcFBsYWNlbWVudDogZ2V0TmV4dFNoaXBMZW5ndGgsXG4gICAgaXNTaGlwUGxhY2FibGUsXG4gICAgaXNBbGxTaGlwc1BsYWNlZCxcbiAgICBpc1Bvc2l0aW9uT2NjdXBpZWQsXG4gICAgaXNQb3NpdGlvbkFuZExlbmd0aFZhbGlkLFxuICAgIHNpemUsXG4gIH07XG59XG4iLCIvKipcbiAqIENyZWF0ZSBhIHNoaXAgd2l0aCBhIGdpdmVuIGxlbmd0aFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTaGlwKHBMZW5ndGgpIHtcbiAgY29uc3QgbGVuZ3RoID0gcExlbmd0aDtcbiAgbGV0IGhpdENvdW50ID0gMDtcblxuICAvKipcbiAgICogQWRkIGEgaGl0IHRvIHRoZSBzaGlwXG4gICAqL1xuICBjb25zdCBoaXQgPSAoKSA9PiB7XG4gICAgaGl0Q291bnQgKz0gMTtcbiAgfTtcblxuICAvKipcbiAgICogS25vdyBpZiB0aGUgc2hpcCBpcyBzdW5rIG9yIG5vdFxuICAgKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBzaGlwIGlzIHN1bmssIG90aGVyd2lzZSBmYWxzZVxuICAgKi9cbiAgY29uc3QgaXNTdW5rID0gKCkgPT4gaGl0Q291bnQgPj0gbGVuZ3RoO1xuXG4gIHJldHVybiB7IGxlbmd0aCwgaGl0LCBpc1N1bmsgfTtcbn1cbiIsImltcG9ydCB7IGNyZWF0ZUdhbWVCb2FyZCB9IGZyb20gJy4vZ2FtZUJvYXJkJztcblxuLyoqXG4gKiBHYW1lIG9iamVjdCB3aXRoIHBsYXllciBhbmQgYWkgYm9hcmRcbiAqL1xuZXhwb3J0IGNvbnN0IGdhbWUgPSAoKCkgPT4ge1xuICBjb25zdCBwbGF5ZXIgPSAoKCkgPT4ge1xuICAgIGNvbnN0IGJvYXJkID0gY3JlYXRlR2FtZUJvYXJkKCk7XG5cbiAgICByZXR1cm4geyBib2FyZCB9O1xuICB9KSgpO1xuICBjb25zdCBhaSA9ICgoKSA9PiB7XG4gICAgY29uc3QgYm9hcmQgPSBjcmVhdGVHYW1lQm9hcmQoKTtcbiAgICBib2FyZC5wbGFjZVNoaXBzUmFuZG9tbHkoKTtcblxuICAgIC8qKlxuICAgICAqIEF0dGFjayBhbm90aGVyIGJvYXJkIHdpdGggYSByYW5kb20gcG9zaXRpb25cbiAgICAgKiBAcGFyYW0geyp9IHBFbmVteUJvYXJkIFRoZSBib2FyZCB0byBhdHRhY2tcbiAgICAgKi9cbiAgICBjb25zdCBwbGF5UmFuZG9tQXR0YWNrID0gKHBFbmVteUJvYXJkKSA9PiB7XG4gICAgICBjb25zdCBwb3NzaWJsZUF0dGFja3MgPSBwbGF5ZXIuYm9hcmQuZ2V0QXR0YWNrUG9zaXRpb25zKCk7XG4gICAgICBjb25zdCBybmRJbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBvc3NpYmxlQXR0YWNrcy5sZW5ndGgpO1xuICAgICAgcEVuZW15Qm9hcmQucmVjZWl2ZUF0dGFjayhwb3NzaWJsZUF0dGFja3Nbcm5kSW5kZXhdKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHsgYm9hcmQsIHBsYXlSYW5kb21BdHRhY2sgfTtcbiAgfSkoKTtcblxuICAvKipcbiAgICogUmV0dXJucyB0cnVlIGlmIGFsbCBzaGlwcyBvZiBvbmUgcGxheWVyIGFyZSBzdW5rXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIGFsbCBzaGlwcyBvZiBvbmUgcGxheWVyIGFyZSBzdW5rLCBvdGhlcndpc2UgZmFsc2VcbiAgICovXG4gIGNvbnN0IGlzR2FtZU92ZXIgPSAoKSA9PlxuICAgIHBsYXllci5ib2FyZC5pc0FsbFNoaXBzU3VuaygpIHx8IGFpLmJvYXJkLmlzQWxsU2hpcHNTdW5rKCk7XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIG5hbWUgb2YgdGhlIHdpbm5lciAoJ3BsYXllcicgb3IgJ2FpJylcbiAgICogQHJldHVybnMge3N0cmluZ30gVGhlIG5hbWUgb2YgdGhlIHdpbm5lclxuICAgKi9cbiAgY29uc3QgZ2V0V2lubmVyID0gKCkgPT4ge1xuICAgIGlmIChwbGF5ZXIuYm9hcmQuaXNBbGxTaGlwc1N1bmsoKSkge1xuICAgICAgcmV0dXJuICdhaSc7XG4gICAgfVxuXG4gICAgcmV0dXJuICdwbGF5ZXInO1xuICB9O1xuXG4gIC8qKlxuICAgKiBBdHRhY2sgYXMgdGhlIHBsYXllciwgdGhlbiBtYWtlIHRoZSBhaSBhdHRhY2sgdGhlIHBsYXllclxuICAgKiBAcGFyYW0ge0FycmF5fSBwUG9zaXRpb24gVGhlIHBvc2l0aW9uIHRvIGF0dGFjayBhcyB0aGUgcGxheWVyIChmb3JtYXQ6IFt4LCB5XSlcbiAgICovXG4gIGNvbnN0IHBsYXlBdHRhY2sgPSAocFBvc2l0aW9uKSA9PiB7XG4gICAgaWYgKGFpLmJvYXJkLnJlY2VpdmVBdHRhY2socFBvc2l0aW9uKSAmJiAhaXNHYW1lT3ZlcigpKSB7XG4gICAgICBhaS5wbGF5UmFuZG9tQXR0YWNrKHBsYXllci5ib2FyZCk7XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBSZXNldCBwbGF5ZXIncyBhbmQgYWkncyBib2FyZFxuICAgKi9cbiAgY29uc3QgcmVzZXRHYW1lID0gKCkgPT4ge1xuICAgIHBsYXllci5ib2FyZCA9IGNyZWF0ZUdhbWVCb2FyZCgpO1xuXG4gICAgYWkuYm9hcmQgPSBjcmVhdGVHYW1lQm9hcmQoKTtcbiAgICBhaS5ib2FyZC5wbGFjZVNoaXBzUmFuZG9tbHkoKTtcbiAgfTtcblxuICAvKipcbiAgICogUmV0dXJucyB0cnVlIGlmIGFsbCBzaGlwIGZyb20gdGhlIHBsYXllciBhbmQgdGhlIGFpIGFyZSBwbGFjZWRcbiAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgYWxsIHNoaXAgZnJvbSB0aGUgcGxheWVyIGFuZCB0aGUgYWkgYXJlIHBsYWNlZCwgb3RoZXJ3aXNlIGZhbHNlXG4gICAqL1xuICBjb25zdCBpc0FsbFNoaXBzUGxhY2VkID0gKCkgPT5cbiAgICBwbGF5ZXIuYm9hcmQuaXNBbGxTaGlwc1BsYWNlZCgpICYmIGFpLmJvYXJkLmlzQWxsU2hpcHNQbGFjZWQoKTtcblxuICByZXR1cm4ge1xuICAgIHBsYXllcixcbiAgICBhaSxcbiAgICBwbGF5QXR0YWNrLFxuICAgIHJlc2V0R2FtZSxcbiAgICBpc0dhbWVPdmVyLFxuICAgIGdldFdpbm5lcixcbiAgICBpc0FsbFNoaXBzUGxhY2VkLFxuICB9O1xufSkoKTtcbiIsImltcG9ydCB7IGdhbWUgfSBmcm9tICcuL2dhbWUnO1xuXG5jb25zdCBncmlkU2l6ZSA9IDEwO1xuY29uc3QgZGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZGlhbG9nJyk7XG5jb25zdCByZXN1bHRQYXJhID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dhbWUtcmVzdWx0Jyk7XG5jb25zdCByZXN0YXJ0R2FtZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2RpYWxvZyBidXR0b24nKTtcbmNvbnN0IGhvcml6b250YWxDaGNrQnggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaG9yaXpvbnRhbCcpO1xuY29uc3QgaG9yaXpvbnRhbExhYmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2luc3RydWN0aW9ucyBsYWJlbCcpO1xuY29uc3QgaW5zdHJ1Y3Rpb25zUGFyYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNpbnN0cnVjdGlvbnMgaDInKTtcblxuLyoqXG4gKiBHZXQgYSBncmlkIGNlbGxcbiAqIEBwYXJhbSB7c3RyaW5nfSBwR3JpZCBJZCBuYW1lIG9mIHRoZSBncmlkICgncGxheWVyLWdyaWQnIG9yICdhaS1ncmlkJylcbiAqIEBwYXJhbSB7QXJyYXl9IHBQb3NpdGlvbiBUaGUgcG9zaXRpb24gb2YgdGhlIGNlbGwgKGZvcm1hdDogW3gsIHldKVxuICogQHJldHVybnMge0hUTUxFbGVtZW50fSBBIGdyaWQgY2VsbCAoZGl2IGVsZW1lbnQpXG4gKi9cbmZ1bmN0aW9uIGdldEdyaWRDZWxsKHBHcmlkLCBwUG9zaXRpb24pIHtcbiAgY29uc3Qgcm93cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYCMke3BHcmlkfSAucm93YCk7XG4gIGNvbnN0IHJvdyA9IHJvd3NbcFBvc2l0aW9uWzFdXTtcbiAgcmV0dXJuIHJvdy5jaGlsZE5vZGVzW3BQb3NpdGlvblswXV07XG59XG5cbi8qKlxuICogVXBkYXRlIHRoZSBjbGFzc2VzIG9mIGEgY2VsbCBmb3Igc3R5bGluZyBwdXJwb3NlXG4gKiBAcGFyYW0ge3N0cmluZ30gcEdyaWQgSWQgbmFtZSBvZiB0aGUgZ3JpZCAoJ3BsYXllci1ncmlkJyBvciAnYWktZ3JpZCcpXG4gKiBAcGFyYW0ge0FycmF5fSBwUG9zaXRpb24gVGhlIHBvc2l0aW9uIG9mIHRoZSBjZWxsIChmb3JtYXQ6IFt4LCB5XSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBwQm9hcmQgVGhlIGJvYXJkIHRvIHVwZGF0ZSAocGxheWVyIG9yIGFpKVxuICovXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlQ2VsbChwR3JpZCwgcFBvc2l0aW9uLCBwQm9hcmQpIHtcbiAgY29uc3QgY3VyckNlbGxTdGF0ZSA9IHBCb2FyZC5nZXRDZWxsU3RhdGUoW3BQb3NpdGlvblswXSwgcFBvc2l0aW9uWzFdXSk7XG4gIGNvbnN0IGN1cnJHcmlkQ2VsbCA9IGdldEdyaWRDZWxsKHBHcmlkLCBbcFBvc2l0aW9uWzBdLCBwUG9zaXRpb25bMV1dKTtcblxuICBpZiAoY3VyckNlbGxTdGF0ZS5hbHJlYWR5QXR0YWNrZWQpIHtcbiAgICBjdXJyR3JpZENlbGwuY2xhc3NMaXN0LmFkZCgnYXR0YWNrZWQnKTtcbiAgfSBlbHNlIHtcbiAgICBjdXJyR3JpZENlbGwuY2xhc3NMaXN0LnJlbW92ZSgnYXR0YWNrZWQnKTtcbiAgfVxuXG4gIGlmIChjdXJyQ2VsbFN0YXRlLnNoaXApIHtcbiAgICBjdXJyR3JpZENlbGwuY2xhc3NMaXN0LmFkZCgnc2hpcCcpO1xuICB9IGVsc2Uge1xuICAgIGN1cnJHcmlkQ2VsbC5jbGFzc0xpc3QucmVtb3ZlKCdzaGlwJyk7XG4gIH1cbn1cblxuLyoqXG4gKiBVcGRhdGUgdGhlIGNsYXNzZXMgb2YgYWxsIGNlbGxzIG9mIGEgZ3JpZCBmb3Igc3R5bGluZyBwdXJwb3NlXG4gKiBAcGFyYW0ge29iamVjdH0gYm9hcmQgVGhlIGJvYXJkIHRvIHVwZGF0ZSAocGxheWVyIG9yIGFpKVxuICovXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlR3JpZChwR3JpZCwgcEJvYXJkKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZ3JpZFNpemU7IGkgKz0gMSkge1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgZ3JpZFNpemU7IGogKz0gMSkge1xuICAgICAgdXBkYXRlQ2VsbChwR3JpZCwgW2ksIGpdLCBwQm9hcmQpO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEF0dGFjayBhcyBhIHBsYXllciBhbmQgdXBkYXRlIHRoZSB1aVxuICogQHBhcmFtIHtBcnJheX0gcFBvc2l0aW9uIFRoZSBwb3NpdGlvbiBvZiB0aGUgY2VsbCAoZm9ybWF0OiBbeCwgeV0pXG4gKi9cbmZ1bmN0aW9uIGF0dGFja0FzUGxheWVyKHBQb3NpdGlvbikge1xuICBpZiAoZ2FtZS5pc0FsbFNoaXBzUGxhY2VkKCkpIHtcbiAgICBnYW1lLnBsYXlBdHRhY2socFBvc2l0aW9uKTtcbiAgICB1cGRhdGVDZWxsKCdhaS1ncmlkJywgcFBvc2l0aW9uLCBnYW1lLmFpLmJvYXJkKTtcbiAgICB1cGRhdGVHcmlkKCdwbGF5ZXItZ3JpZCcsIGdhbWUucGxheWVyLmJvYXJkKTtcblxuICAgIGlmIChnYW1lLmlzR2FtZU92ZXIoKSkge1xuICAgICAgcmVzdWx0UGFyYS50ZXh0Q29udGVudCA9IGAke2dhbWVcbiAgICAgICAgLmdldFdpbm5lcigpXG4gICAgICAgIC50b1VwcGVyQ2FzZSgpfSB3aW5zIHRoZSBnYW1lIWA7XG4gICAgICBkaWFsb2cuc2hvd01vZGFsKCk7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUGxhY2UgYSBzaGlwIG9uIHRoZSBwbGF5ZXIgYm9hcmRcbiAqIEBwYXJhbSB7QXJyYXl9IHBQb3NpdGlvbiBUaGUgcG9zaXRpb24gb2YgdGhlIGNlbGwgKGZvcm1hdDogW3gsIHldKVxuICovXG5mdW5jdGlvbiBwbGFjZVNoaXAocFBvc2l0aW9uKSB7XG4gIGNvbnN0IHNoaXBMZW5ndGggPSBnYW1lLnBsYXllci5ib2FyZC5wcmV2aWV3TmV4dFNoaXBQbGFjZW1lbnQoKTtcbiAgaWYgKHNoaXBMZW5ndGggIT09IG51bGwpIHtcbiAgICBsZXQgc3RhcnRQb3MgPSBwUG9zaXRpb247XG4gICAgaWYgKFxuICAgICAgIWdhbWUucGxheWVyLmJvYXJkLmlzUG9zaXRpb25BbmRMZW5ndGhWYWxpZChcbiAgICAgICAgc2hpcExlbmd0aCxcbiAgICAgICAgcFBvc2l0aW9uLFxuICAgICAgICBob3Jpem9udGFsQ2hja0J4LmNoZWNrZWRcbiAgICAgIClcbiAgICApIHtcbiAgICAgIGlmIChob3Jpem9udGFsQ2hja0J4LmNoZWNrZWQpIHtcbiAgICAgICAgc3RhcnRQb3MgPSBbZ2FtZS5wbGF5ZXIuYm9hcmQuc2l6ZSAtIHNoaXBMZW5ndGgsIHBQb3NpdGlvblsxXV07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdGFydFBvcyA9IFtwUG9zaXRpb25bMF0sIGdhbWUucGxheWVyLmJvYXJkLnNpemUgLSBzaGlwTGVuZ3RoXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICAhZ2FtZS5wbGF5ZXIuYm9hcmQuaXNQb3NpdGlvbk9jY3VwaWVkKFxuICAgICAgICBzaGlwTGVuZ3RoLFxuICAgICAgICBzdGFydFBvcyxcbiAgICAgICAgaG9yaXpvbnRhbENoY2tCeC5jaGVja2VkXG4gICAgICApXG4gICAgKSB7XG4gICAgICBnYW1lLnBsYXllci5ib2FyZC5wbGFjZVNoaXAoXG4gICAgICAgIHNoaXBMZW5ndGgsXG4gICAgICAgIHN0YXJ0UG9zLFxuICAgICAgICBob3Jpem9udGFsQ2hja0J4LmNoZWNrZWRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGdhbWUuaXNBbGxTaGlwc1BsYWNlZCgpKSB7XG4gICAgICBpbnN0cnVjdGlvbnNQYXJhLnRleHRDb250ZW50ID0gJ0dvb2QgbHVjayBjYXB0YWluJztcbiAgICAgIGhvcml6b250YWxDaGNrQnguY2xhc3NMaXN0LmFkZCgnaGlkZScpO1xuICAgICAgaG9yaXpvbnRhbExhYmVsLmNsYXNzTGlzdC5hZGQoJ2hpZGUnKTtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBQcmV2aWV3IHRoZSBwbGFjZW1lbnQgb2YgYSBzaGlwIG9uIHRoZSBwbGF5ZXIgYm9hcmRcbiAqIEBwYXJhbSB7Kn0gcFBvc2l0aW9uIFRoZSBwb3NpdGlvbiBvZiB0aGUgY2VsbCAoZm9ybWF0OiBbeCwgeV0pXG4gKi9cbmZ1bmN0aW9uIHByZXZpZXdTaGlwUGxhY2VtZW50KHBQb3NpdGlvbikge1xuICBjb25zdCBzaGlwTGVuZ3RoID0gZ2FtZS5wbGF5ZXIuYm9hcmQucHJldmlld05leHRTaGlwUGxhY2VtZW50KCk7XG4gIGlmIChzaGlwTGVuZ3RoICE9PSBudWxsKSB7XG4gICAgdXBkYXRlR3JpZCgncGxheWVyLWdyaWQnLCBnYW1lLnBsYXllci5ib2FyZCk7XG4gICAgaWYgKGhvcml6b250YWxDaGNrQnguY2hlY2tlZCkge1xuICAgICAgbGV0IHhTdGFydDtcbiAgICAgIGlmICghZ2FtZS5wbGF5ZXIuYm9hcmQuaXNQb3NpdGlvbkFuZExlbmd0aFZhbGlkKHNoaXBMZW5ndGgsIHBQb3NpdGlvbikpIHtcbiAgICAgICAgeFN0YXJ0ID0gZ2FtZS5wbGF5ZXIuYm9hcmQuc2l6ZSAtIHNoaXBMZW5ndGg7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBbeFN0YXJ0XSA9IHBQb3NpdGlvbjtcbiAgICAgIH1cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcExlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IGN1cnJHcmlkQ2VsbCA9IGdldEdyaWRDZWxsKCdwbGF5ZXItZ3JpZCcsIFtcbiAgICAgICAgICB4U3RhcnQgKyBpLFxuICAgICAgICAgIHBQb3NpdGlvblsxXSxcbiAgICAgICAgXSk7XG4gICAgICAgIGN1cnJHcmlkQ2VsbC5jbGFzc0xpc3QuYWRkKCdzaGlwJyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCB5U3RhcnQ7XG4gICAgICBpZiAoXG4gICAgICAgICFnYW1lLnBsYXllci5ib2FyZC5pc1Bvc2l0aW9uQW5kTGVuZ3RoVmFsaWQoXG4gICAgICAgICAgc2hpcExlbmd0aCxcbiAgICAgICAgICBwUG9zaXRpb24sXG4gICAgICAgICAgZmFsc2VcbiAgICAgICAgKVxuICAgICAgKSB7XG4gICAgICAgIHlTdGFydCA9IGdhbWUucGxheWVyLmJvYXJkLnNpemUgLSBzaGlwTGVuZ3RoO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgWywgeVN0YXJ0XSA9IHBQb3NpdGlvbjtcbiAgICAgIH1cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcExlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IGN1cnJHcmlkQ2VsbCA9IGdldEdyaWRDZWxsKCdwbGF5ZXItZ3JpZCcsIFtcbiAgICAgICAgICBwUG9zaXRpb25bMF0sXG4gICAgICAgICAgeVN0YXJ0ICsgaSxcbiAgICAgICAgXSk7XG4gICAgICAgIGN1cnJHcmlkQ2VsbC5jbGFzc0xpc3QuYWRkKCdzaGlwJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGVtcHR5IGdyaWRcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHBDb250YWluZXIgVGhlIGNvbnRhaW5lciBvZiB0aGUgZ3JpZFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlR3JpZChwQ29udGFpbmVyKSB7XG4gIGxldCBjdXJyQ2VsbDtcbiAgbGV0IGN1cnJSb3c7XG5cbiAgZm9yIChsZXQgaSA9IGdyaWRTaXplIC0gMTsgaSA+PSAwOyBpIC09IDEpIHtcbiAgICBjdXJyUm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY3VyclJvdy5jbGFzc05hbWUgPSAncm93JztcblxuICAgIGZvciAobGV0IGogPSAwOyBqIDwgZ3JpZFNpemU7IGogKz0gMSkge1xuICAgICAgY3VyckNlbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGN1cnJDZWxsLmNsYXNzTmFtZSA9ICdjZWxsJztcbiAgICAgIGN1cnJDZWxsLnNldEF0dHJpYnV0ZSgnZGF0YS1wb3MnLCBbaSwgal0pO1xuXG4gICAgICBpZiAocENvbnRhaW5lci5pZCA9PT0gJ2FpLWdyaWQnKSB7XG4gICAgICAgIGN1cnJDZWxsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gYXR0YWNrQXNQbGF5ZXIoW2osIGldKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyQ2VsbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHBsYWNlU2hpcChbaiwgaV0pKTtcbiAgICAgICAgY3VyckNlbGwuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgKCkgPT5cbiAgICAgICAgICBwcmV2aWV3U2hpcFBsYWNlbWVudChbaiwgaV0pXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIGN1cnJSb3cuYXBwZW5kQ2hpbGQoY3VyckNlbGwpO1xuICAgIH1cblxuICAgIHBDb250YWluZXIucHJlcGVuZChjdXJyUm93KTtcbiAgfVxufVxuXG5yZXN0YXJ0R2FtZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgZGlhbG9nLmNsb3NlKCk7XG4gIGdhbWUucmVzZXRHYW1lKCk7XG4gIHVwZGF0ZUdyaWQoJ3BsYXllci1ncmlkJywgZ2FtZS5wbGF5ZXIuYm9hcmQpO1xuICB1cGRhdGVHcmlkKCdhaS1ncmlkJywgZ2FtZS5haS5ib2FyZCk7XG4gIGhvcml6b250YWxDaGNrQnguY2xhc3NMaXN0LnJlbW92ZSgnaGlkZScpO1xuICBob3Jpem9udGFsTGFiZWwuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZScpO1xuICBpbnN0cnVjdGlvbnNQYXJhLnRleHRDb250ZW50ID0gJ1BsYWNlIHlvdXIgc2hpcHMnO1xufSk7XG4iLCIvLyAjcmVnaW9uIEltcG9ydHNcbmltcG9ydCAnLi9jc3Mvc3R5bGVzLnNjc3MnO1xuaW1wb3J0IHsgY3JlYXRlR3JpZCwgdXBkYXRlR3JpZCB9IGZyb20gJy4vanMvRE9NSGFuZGxlcic7XG5pbXBvcnQgeyBnYW1lIH0gZnJvbSAnLi9qcy9nYW1lJztcblxuLy8gI2VuZHJlZ2lvblxuXG5jb25zdCBwbGF5ZXJHcmlkQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BsYXllci1ncmlkJyk7XG5jb25zdCBhaUdyaWRDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWktZ3JpZCcpO1xuXG5jcmVhdGVHcmlkKHBsYXllckdyaWRDb250YWluZXIpO1xuY3JlYXRlR3JpZChhaUdyaWRDb250YWluZXIpO1xudXBkYXRlR3JpZCgnYWktZ3JpZCcsIGdhbWUuYWkuYm9hcmQpO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiaSIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsImNyZWF0ZUdhbWVCb2FyZCIsInNpemUiLCJib2FyZCIsInJvdyIsImoiLCJhbHJlYWR5QXR0YWNrZWQiLCJzaGlwIiwic2hpcHMiLCJzaGlwc0xlbmd0aCIsImN1cnJTaGlwSW5kZXgiLCJpc1Bvc2l0aW9uVmFsaWQiLCJwUG9zaXRpb24iLCJpc1Bvc2l0aW9uQW5kTGVuZ3RoVmFsaWQiLCJwTGVuZ3RoIiwicEhvcml6b250YWwiLCJpc1Bvc2l0aW9uT2NjdXBpZWQiLCJpc1NoaXBQbGFjYWJsZSIsInBsYWNlU2hpcCIsIm5ld1NoaXAiLCJoaXRDb3VudCIsImhpdCIsImlzU3VuayIsImNyZWF0ZVNoaXAiLCJyZWNlaXZlQXR0YWNrIiwiaXNBdHRhY2tQb3NzaWJsZSIsImlzQWxsU2hpcHNTdW5rIiwiZmluZCIsImdldEF0dGFja1Bvc2l0aW9ucyIsImF0dGFja1Bvc2l0aW9ucyIsImdldENlbGxTdGF0ZSIsIlJhbmdlRXJyb3IiLCJwbGFjZVNoaXBzUmFuZG9tbHkiLCJob3Jpem9udGFsIiwieCIsInkiLCJmb3JFYWNoIiwic2hpcExlbmd0aCIsIk1hdGgiLCJyYW5kb20iLCJmbG9vciIsInByZXZpZXdOZXh0U2hpcFBsYWNlbWVudCIsImlzQWxsU2hpcHNQbGFjZWQiLCJsb2NhbHMiLCJnYW1lIiwicGxheWVyIiwiYWkiLCJwbGF5UmFuZG9tQXR0YWNrIiwicEVuZW15Qm9hcmQiLCJwb3NzaWJsZUF0dGFja3MiLCJybmRJbmRleCIsImlzR2FtZU92ZXIiLCJwbGF5QXR0YWNrIiwicmVzZXRHYW1lIiwiZ2V0V2lubmVyIiwiZ3JpZFNpemUiLCJkaWFsb2ciLCJyZXN1bHRQYXJhIiwiZ2V0RWxlbWVudEJ5SWQiLCJyZXN0YXJ0R2FtZUJ0biIsImhvcml6b250YWxDaGNrQngiLCJob3Jpem9udGFsTGFiZWwiLCJpbnN0cnVjdGlvbnNQYXJhIiwiZ2V0R3JpZENlbGwiLCJwR3JpZCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjaGlsZE5vZGVzIiwidXBkYXRlQ2VsbCIsInBCb2FyZCIsImN1cnJDZWxsU3RhdGUiLCJjdXJyR3JpZENlbGwiLCJjbGFzc0xpc3QiLCJhZGQiLCJ1cGRhdGVHcmlkIiwic3RhcnRQb3MiLCJjaGVja2VkIiwidGV4dENvbnRlbnQiLCJwcmV2aWV3U2hpcFBsYWNlbWVudCIsInhTdGFydCIsInlTdGFydCIsImNyZWF0ZUdyaWQiLCJwQ29udGFpbmVyIiwiY3VyckNlbGwiLCJjdXJyUm93IiwiY2xhc3NOYW1lIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFja0FzUGxheWVyIiwidG9VcHBlckNhc2UiLCJzaG93TW9kYWwiLCJwcmVwZW5kIiwiY2xvc2UiLCJwbGF5ZXJHcmlkQ29udGFpbmVyIiwiYWlHcmlkQ29udGFpbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==